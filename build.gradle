import org.gradle.api.internal.project.DefaultProject

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}
group = 'com.dingdangmaoup'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'
ext {
    springBootVersion = '3.0.6'
    colaVersion = '4.3.1'
    fastjson2Version = '2.0.24'
    okhttp3Version = '4.10.0'
    mysqlVersion = '8.0.33'
    mybatisPlusVersion = '3.5.3.1'
    bootstrapProject = project(":mini-bootstrap") as DefaultProject
}
allprojects {
    apply {
        plugin('java-library')
        plugin('org.springframework.boot')
        plugin('io.spring.dependency-management')
    }
    if (project != bootstrapProject) {

        bootJar {
            enabled = false
        }
        jar {
            enabled = true
        }
    }
    artifacts {
        archives jar
    }
    tasks.named('test') {
        useJUnitPlatform()
    }
    tasks.register('copyJar', Copy) {
        from "${buildDir}/libs"
        into "${rootProject.buildDir}/output"
        include "*.jar"
    }
    tasks.named('build').get().dependsOn('copyJar')
}
subprojects {
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        configureEach {
            exclude module: 'spring-boot-starter-tomcat'
            exclude module: 'undertow-websockets-jsr'
            resolutionStrategy {
                cacheChangingModulesFor 0, 'seconds'
                cacheDynamicVersionsFor 0, 'seconds'
            }
        }
    }
    dependencies {
        api platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        api platform("com.alibaba.cola:cola-components-bom:${colaVersion}")
        api platform("com.alibaba.fastjson2:fastjson2:${fastjson2Version}")
        api platform("com.alibaba.fastjson2:fastjson2-extension-spring6:${fastjson2Version}")
        api platform("com.squareup.okhttp3:okhttp-bom:${okhttp3Version}")
        api platform("com.mysql:mysql-connector-j:${mysqlVersion}")
        api platform("com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}")
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }



}

